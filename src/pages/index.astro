---
import { Image } from "astro:assets";
import Article from "@/components/Article.astro";
import Layout from "@/layouts/Layout.astro";
import { SITE_TITLE } from "@/config";
import Portrait from "./about/fumika.jpg";
import { getArticleSourceFromUrl } from "@/models/ArticleSource";
import type { UpdatesFields } from "@/models/ApiTable";

const apiTableUrl = `https://aitable.ai/fusion/v1/datasheets/${import.meta.env.APITABLE_UPDATES_DATASHEET_ID}/records?viewId=${import.meta.env.APITABLE_UPDATES_VIEW_ID}&fieldKey=name`;
const res = await fetch(apiTableUrl, {
  method: "GET",
  headers: new Headers({
    "Content-Type": "application/json",
    Authorization: `Bearer ${import.meta.env.APITABLE_ACCESS_TOKEN}`,
  }),
});
const updatesView = await res.json();

const updates = (updatesView.data?.records ?? [])
  .map((x: any) => x.fields as UpdatesFields)
  .map((x: any) => ({
    title: x.title ?? "",
    date: x.date ? new Date(x.date) : undefined,
    permalink: x.href,
    source: x.href ? getArticleSourceFromUrl(x.href.text) : undefined,
    summary: x.body ?? "",
    parent: x.parent,
    image: x.image,
  }));

const columns = 3;
---

<Layout title={SITE_TITLE}>
  <main transition:animate="slide">
    <article class="profile">
      <Image
        class="portrait"
        src={Portrait}
        width={128}
        height={128}
        alt="mfakane"
      />
      <section>
        <h2>I'm @mfakane.</h2>
        <p>ミーフォ茜といいます。</p>
        <p>
          <a href="/about/">私について</a>
        </p>
      </section>
    </article>
    <article>
      <h2>更新情報</h2>
      <div class="showcase">
        {
          [...Array(columns)].map((_, column) => (
            <div class="showcase-column">
              {updates
                .filter((_: any, i: any) => i % columns === column)
                .map((update) => (
                  <Article
                    date={update.date}
                    permalink={update.permalink}
                    source={update.source}
                    image={update.image}
                    set:html={update.summary}
                  >
                    <h3 slot="title">
                      <a
                        href={
                          update.parent
                            ? `/${update.parent}`
                            : typeof update.permalink === "string"
                              ? update.permalink
                              : update.permalink?.text
                        }
                      >
                        {update.title}
                      </a>
                    </h3>
                    {update.permalink && (
                      <a
                        slot="footer"
                        href={
                          typeof update.permalink === "string"
                            ? update.permalink
                            : update.permalink?.text
                        }
                      >
                        詳細 →
                      </a>
                    )}
                  </Article>
                ))}
            </div>
          ))
        }
      </div>
    </article>
  </main>
</Layout>
